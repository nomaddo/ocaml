"hygiene.ml" 35 1144 1148 "hygiene.ml" 35 1144 1160
type(
  ('a -> 'b option) -> 'a list -> 'b list
)
ident(
  def list_collect "hygiene.ml" 45 1367 1367 "hygiene.ml" 1 0 -1
)
"hygiene.ml" 35 1144 1161 "hygiene.ml" 35 1144 1162
type(
  'a -> 'b option
)
ident(
  def f "hygiene.ml" 35 1144 1163 "hygiene.ml" 43 1354 1365
)
"hygiene.ml" 35 1144 1163 "hygiene.ml" 35 1144 1164
type(
  'a list
)
ident(
  def l "hygiene.ml" 36 1167 1169 "hygiene.ml" 43 1354 1365
)
"hygiene.ml" 36 1167 1177 "hygiene.ml" 36 1167 1181
type(
  'b list -> 'a list -> 'b list
)
ident(
  def loop "hygiene.ml" 36 1167 1169 "hygiene.ml" 43 1354 1365
)
"hygiene.ml" 36 1167 1182 "hygiene.ml" 36 1167 1188
type(
  'b list
)
ident(
  def result "hygiene.ml" 36 1167 1191 "hygiene.ml" 41 1305 1348
)
"hygiene.ml" 37 1200 1206 "hygiene.ml" 37 1200 1208
type(
  'a list
)
"hygiene.ml" 37 1200 1212 "hygiene.ml" 37 1200 1220
type(
  'b list -> 'b list
)
ident(
  ext_ref My_std.List.rev
)
"hygiene.ml" 37 1200 1221 "hygiene.ml" 37 1200 1227
type(
  'b list
)
ident(
  int_ref result "hygiene.ml" 36 1167 1182 "hygiene.ml" 36 1167 1188
)
"hygiene.ml" 37 1200 1212 "hygiene.ml" 37 1200 1227
call(
  tail
)
type(
  'b list
)
"hygiene.ml" 38 1228 1234 "hygiene.ml" 38 1228 1235
type(
  'a
)
ident(
  def x "hygiene.ml" 39 1247 1255 "hygiene.ml" 41 1305 1348
)
"hygiene.ml" 38 1228 1239 "hygiene.ml" 38 1228 1243
type(
  'a list
)
ident(
  def rest "hygiene.ml" 39 1247 1255 "hygiene.ml" 41 1305 1348
)
"hygiene.ml" 38 1228 1234 "hygiene.ml" 38 1228 1243
type(
  'a list
)
"hygiene.ml" 39 1247 1261 "hygiene.ml" 39 1247 1262
type(
  'a -> 'b option
)
ident(
  int_ref f "hygiene.ml" 35 1144 1161 "hygiene.ml" 35 1144 1162
)
"hygiene.ml" 39 1247 1263 "hygiene.ml" 39 1247 1264
type(
  'a
)
ident(
  int_ref x "hygiene.ml" 38 1228 1234 "hygiene.ml" 38 1228 1235
)
"hygiene.ml" 39 1247 1261 "hygiene.ml" 39 1247 1264
call(
  stack
)
type(
  'b option
)
"hygiene.ml" 40 1270 1280 "hygiene.ml" 40 1270 1284
type(
  'b option
)
"hygiene.ml" 40 1270 1288 "hygiene.ml" 40 1270 1292
type(
  'b list -> 'a list -> 'b list
)
ident(
  int_ref loop "hygiene.ml" 36 1167 1177 "hygiene.ml" 36 1167 1181
)
"hygiene.ml" 40 1270 1293 "hygiene.ml" 40 1270 1299
type(
  'b list
)
ident(
  int_ref result "hygiene.ml" 36 1167 1182 "hygiene.ml" 36 1167 1188
)
"hygiene.ml" 40 1270 1300 "hygiene.ml" 40 1270 1304
type(
  'a list
)
ident(
  int_ref rest "hygiene.ml" 38 1228 1239 "hygiene.ml" 38 1228 1243
)
"hygiene.ml" 40 1270 1288 "hygiene.ml" 40 1270 1304
call(
  tail
)
type(
  'b list
)
"hygiene.ml" 41 1305 1320 "hygiene.ml" 41 1305 1321
type(
  'b
)
ident(
  def y "hygiene.ml" 41 1305 1325 "hygiene.ml" 41 1305 1348
)
"hygiene.ml" 41 1305 1315 "hygiene.ml" 41 1305 1321
type(
  'b option
)
"hygiene.ml" 41 1305 1325 "hygiene.ml" 41 1305 1329
type(
  'b list -> 'a list -> 'b list
)
ident(
  int_ref loop "hygiene.ml" 36 1167 1177 "hygiene.ml" 36 1167 1181
)
"hygiene.ml" 41 1305 1331 "hygiene.ml" 41 1305 1332
type(
  'b
)
ident(
  int_ref y "hygiene.ml" 41 1305 1320 "hygiene.ml" 41 1305 1321
)
"hygiene.ml" 41 1305 1336 "hygiene.ml" 41 1305 1342
type(
  'b list
)
ident(
  int_ref result "hygiene.ml" 36 1167 1182 "hygiene.ml" 36 1167 1188
)
"hygiene.ml" 41 1305 1330 "hygiene.ml" 41 1305 1343
type(
  'b list
)
"hygiene.ml" 41 1305 1344 "hygiene.ml" 41 1305 1348
type(
  'a list
)
ident(
  int_ref rest "hygiene.ml" 38 1228 1239 "hygiene.ml" 38 1228 1243
)
"hygiene.ml" 41 1305 1325 "hygiene.ml" 41 1305 1348
call(
  tail
)
type(
  'b list
)
"hygiene.ml" 39 1247 1255 "hygiene.ml" 41 1305 1348
type(
  'b list
)
"hygiene.ml" 36 1167 1191 "hygiene.ml" 41 1305 1348
type(
  'a list -> 'b list
)
"hygiene.ml" 43 1354 1356 "hygiene.ml" 43 1354 1360
type(
  'b list -> 'a list -> 'b list
)
ident(
  int_ref loop "hygiene.ml" 36 1167 1177 "hygiene.ml" 36 1167 1181
)
"hygiene.ml" 43 1354 1361 "hygiene.ml" 43 1354 1363
type(
  'b list
)
"hygiene.ml" 43 1354 1364 "hygiene.ml" 43 1354 1365
type(
  'a list
)
ident(
  int_ref l "hygiene.ml" 35 1144 1163 "hygiene.ml" 35 1144 1164
)
"hygiene.ml" 43 1354 1356 "hygiene.ml" 43 1354 1365
call(
  tail
)
type(
  'b list
)
"hygiene.ml" 36 1167 1169 "hygiene.ml" 43 1354 1365
type(
  'b list
)
"hygiene.ml" 45 1367 1371 "hygiene.ml" 45 1367 1388
type(
  ('a -> 'b option) -> 'a list -> 'b option
)
ident(
  def list_none_for_all "hygiene.ml" 55 1540 1540 "hygiene.ml" 1 0 -1
)
"hygiene.ml" 45 1367 1389 "hygiene.ml" 45 1367 1390
type(
  'a -> 'b option
)
ident(
  def f "hygiene.ml" 45 1367 1391 "hygiene.ml" 53 1530 1538
)
"hygiene.ml" 45 1367 1391 "hygiene.ml" 45 1367 1392
type(
  'a list
)
ident(
  def l "hygiene.ml" 46 1395 1397 "hygiene.ml" 53 1530 1538
)
"hygiene.ml" 46 1395 1405 "hygiene.ml" 46 1395 1409
type(
  'a list -> 'b option
)
ident(
  def loop "hygiene.ml" 46 1395 1397 "hygiene.ml" 53 1530 1538
)
"hygiene.ml" 47 1421 1427 "hygiene.ml" 47 1421 1429
type(
  'a list
)
"hygiene.ml" 47 1421 1433 "hygiene.ml" 47 1421 1437
type(
  'b option
)
"hygiene.ml" 48 1438 1444 "hygiene.ml" 48 1438 1445
type(
  'a
)
ident(
  def x "hygiene.ml" 49 1457 1465 "hygiene.ml" 51 1508 1524
)
"hygiene.ml" 48 1438 1449 "hygiene.ml" 48 1438 1453
type(
  'a list
)
ident(
  def rest "hygiene.ml" 49 1457 1465 "hygiene.ml" 51 1508 1524
)
"hygiene.ml" 48 1438 1444 "hygiene.ml" 48 1438 1453
type(
  'a list
)
"hygiene.ml" 49 1457 1471 "hygiene.ml" 49 1457 1472
type(
  'a -> 'b option
)
ident(
  int_ref f "hygiene.ml" 45 1367 1389 "hygiene.ml" 45 1367 1390
)
"hygiene.ml" 49 1457 1473 "hygiene.ml" 49 1457 1474
type(
  'a
)
ident(
  int_ref x "hygiene.ml" 48 1438 1444 "hygiene.ml" 48 1438 1445
)
"hygiene.ml" 49 1457 1471 "hygiene.ml" 49 1457 1474
call(
  stack
)
type(
  'b option
)
"hygiene.ml" 50 1480 1490 "hygiene.ml" 50 1480 1494
type(
  'b option
)
"hygiene.ml" 50 1480 1498 "hygiene.ml" 50 1480 1502
type(
  'a list -> 'b option
)
ident(
  int_ref loop "hygiene.ml" 46 1395 1405 "hygiene.ml" 46 1395 1409
)
"hygiene.ml" 50 1480 1503 "hygiene.ml" 50 1480 1507
type(
  'a list
)
ident(
  int_ref rest "hygiene.ml" 48 1438 1449 "hygiene.ml" 48 1438 1453
)
"hygiene.ml" 50 1480 1498 "hygiene.ml" 50 1480 1507
call(
  tail
)
type(
  'b option
)
"hygiene.ml" 51 1508 1518 "hygiene.ml" 51 1508 1519
type(
  'b option
)
ident(
  def y "hygiene.ml" 51 1508 1523 "hygiene.ml" 51 1508 1524
)
"hygiene.ml" 51 1508 1523 "hygiene.ml" 51 1508 1524
type(
  'b option
)
ident(
  int_ref y "hygiene.ml" 51 1508 1518 "hygiene.ml" 51 1508 1519
)
"hygiene.ml" 49 1457 1465 "hygiene.ml" 51 1508 1524
type(
  'b option
)
"hygiene.ml" 46 1395 1412 "hygiene.ml" 51 1508 1524
type(
  'a list -> 'b option
)
"hygiene.ml" 53 1530 1532 "hygiene.ml" 53 1530 1536
type(
  'a list -> 'b option
)
ident(
  int_ref loop "hygiene.ml" 46 1395 1405 "hygiene.ml" 46 1395 1409
)
"hygiene.ml" 53 1530 1537 "hygiene.ml" 53 1530 1538
type(
  'a list
)
ident(
  int_ref l "hygiene.ml" 45 1367 1391 "hygiene.ml" 45 1367 1392
)
"hygiene.ml" 53 1530 1532 "hygiene.ml" 53 1530 1538
call(
  tail
)
type(
  'b option
)
"hygiene.ml" 46 1395 1397 "hygiene.ml" 53 1530 1538
type(
  'b option
)
"hygiene.ml" 55 1540 1544 "hygiene.ml" 55 1540 1546
type(
  ('a, unit, string) format -> 'a
)
ident(
  def sf "hygiene.ml" 57 1565 1565 "hygiene.ml" 1 0 -1
)
"hygiene.ml" 55 1540 1549 "hygiene.ml" 55 1540 1563
type(
  ('a, unit, string) format -> 'a
)
ident(
  ext_ref Printf.sprintf
)
"hygiene.ml" 57 1565 1577 "hygiene.ml" 57 1565 1593
call(
  stack
)
"hygiene.ml" 59 1597 1601 "hygiene.ml" 59 1597 1606
type(
  ?sanitize:string ->
  law list -> bool Slurp.entry -> (law * string list) list
)
ident(
  def check "hygiene.ml" 175 6096 6101 "hygiene.ml" 1 0 -1
)
"hygiene.ml" 59 1597 1608 "hygiene.ml" 59 1597 1616
type(
  string option
)
ident(
  def sanitize "hygiene.ml" 59 1597 1617 "hygiene.ml" 175 6096 6101
)
"hygiene.ml" 59 1597 1617 "hygiene.ml" 59 1597 1621
type(
  law list
)
ident(
  def laws "hygiene.ml" 59 1597 1622 "hygiene.ml" 175 6096 6101
)
"hygiene.ml" 59 1597 1622 "hygiene.ml" 59 1597 1627
type(
  bool Slurp.entry
)
ident(
  def entry "hygiene.ml" 60 1630 1632 "hygiene.ml" 175 6096 6101
)
"hygiene.ml" 60 1630 1636 "hygiene.ml" 60 1630 1645
type(
  (law * string list) list ref
)
ident(
  def penalties "hygiene.ml" 61 1658 1660 "hygiene.ml" 175 6096 6101
)
"hygiene.ml" 60 1630 1648 "hygiene.ml" 60 1630 1651
type(
  (law * string list) list -> (law * string list) list ref
)
ident(
  ext_ref Pervasives.ref
)
"hygiene.ml" 60 1630 1652 "hygiene.ml" 60 1630 1654
type(
  (law * string list) list
)
"hygiene.ml" 60 1630 1648 "hygiene.ml" 60 1630 1654
type(
  (law * string list) list ref
)
"hygiene.ml" 61 1658 1664 "hygiene.ml" 61 1658 1672
type(
  SS.t ref
)
ident(
  def microbes "hygiene.ml" 62 1691 1693 "hygiene.ml" 175 6096 6101
)
"hygiene.ml" 61 1658 1675 "hygiene.ml" 61 1658 1678
type(
  SS.t -> SS.t ref
)
ident(
  ext_ref Pervasives.ref
)
"hygiene.ml" 61 1658 1679 "hygiene.ml" 61 1658 1687
type(
  SS.t
)
ident(
  ext_ref SS.empty
)
"hygiene.ml" 61 1658 1675 "hygiene.ml" 61 1658 1687
type(
  SS.t ref
)
"hygiene.ml" 62 1691 1697 "hygiene.ml" 62 1691 1699
type(
  unit
)
"hygiene.ml" 63 1702 1712 "hygiene.ml" 63 1702 1720
type(
  string option
)
ident(
  int_ref sanitize "hygiene.ml" 59 1597 1608 "hygiene.ml" 59 1597 1616
)
"hygiene.ml" 64 1726 1737 "hygiene.ml" 64 1726 1739
type(
  string
)
ident(
  def fn "hygiene.ml" 64 1726 1743 "hygiene.ml" 64 1726 1783
)
"hygiene.ml" 64 1726 1732 "hygiene.ml" 64 1726 1739
type(
  string option
)
"hygiene.ml" 64 1726 1746 "hygiene.ml" 64 1726 1761
type(
  string -> bool
)
ident(
  ext_ref My_std.sys_file_exists
)
"hygiene.ml" 64 1726 1762 "hygiene.ml" 64 1726 1764
type(
  string
)
ident(
  int_ref fn "hygiene.ml" 64 1726 1737 "hygiene.ml" 64 1726 1739
)
"hygiene.ml" 64 1726 1746 "hygiene.ml" 64 1726 1764
call(
  stack
)
type(
  bool
)
"hygiene.ml" 64 1726 1770 "hygiene.ml" 64 1726 1780
type(
  string -> unit
)
ident(
  ext_ref My_std.sys_remove
)
"hygiene.ml" 64 1726 1781 "hygiene.ml" 64 1726 1783
type(
  string
)
ident(
  int_ref fn "hygiene.ml" 64 1726 1737 "hygiene.ml" 64 1726 1739
)
"hygiene.ml" 64 1726 1770 "hygiene.ml" 64 1726 1783
call(
  stack
)
type(
  unit
)
"hygiene.ml" 64 1726 1743 "hygiene.ml" 64 1726 1783
type(
  unit
)
"hygiene.ml" 65 1784 1790 "hygiene.ml" 65 1784 1794
type(
  string option
)
"hygiene.ml" 65 1784 1798 "hygiene.ml" 65 1784 1800
type(
  unit
)
"hygiene.ml" 63 1702 1706 "hygiene.ml" 65 1784 1800
type(
  unit
)
"hygiene.ml" 67 1806 1812 "hygiene.ml" 67 1806 1818
type(
  string -> string -> unit
)
ident(
  def remove "hygiene.ml" 71 1928 1930 "hygiene.ml" 175 6096 6101
)
"hygiene.ml" 67 1806 1819 "hygiene.ml" 67 1806 1823
type(
  string
)
ident(
  def path "hygiene.ml" 67 1806 1824 "hygiene.ml" 69 1860 1922
)
"hygiene.ml" 67 1806 1824 "hygiene.ml" 67 1806 1828
type(
  string
)
ident(
  def name "hygiene.ml" 68 1831 1835 "hygiene.ml" 69 1860 1922
)
"hygiene.ml" 68 1831 1838 "hygiene.ml" 68 1831 1846
type(
  string option
)
ident(
  int_ref sanitize "hygiene.ml" 59 1597 1608 "hygiene.ml" 59 1597 1616
)
"hygiene.ml" 68 1831 1847 "hygiene.ml" 68 1831 1849
type(
  string option -> string option -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"hygiene.ml" 68 1831 1850 "hygiene.ml" 68 1831 1854
type(
  string option
)
"hygiene.ml" 68 1831 1838 "hygiene.ml" 68 1831 1854
type(
  bool
)
"hygiene.ml" 69 1860 1866 "hygiene.ml" 69 1860 1874
type(
  SS.t ref
)
ident(
  int_ref microbes "hygiene.ml" 61 1658 1664 "hygiene.ml" 61 1658 1672
)
"hygiene.ml" 69 1860 1875 "hygiene.ml" 69 1860 1877
type(
  SS.t ref -> SS.t -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"hygiene.ml" 69 1860 1878 "hygiene.ml" 69 1860 1884
type(
  SS.elt -> SS.t -> SS.t
)
ident(
  ext_ref SS.add
)
"hygiene.ml" 69 1860 1886 "hygiene.ml" 69 1860 1901
type(
  string -> string -> SS.elt
)
ident(
  ext_ref My_std.filename_concat
)
"hygiene.ml" 69 1860 1902 "hygiene.ml" 69 1860 1906
type(
  string
)
ident(
  int_ref path "hygiene.ml" 67 1806 1819 "hygiene.ml" 67 1806 1823
)
"hygiene.ml" 69 1860 1907 "hygiene.ml" 69 1860 1911
type(
  string
)
ident(
  int_ref name "hygiene.ml" 67 1806 1824 "hygiene.ml" 67 1806 1828
)
"hygiene.ml" 69 1860 1885 "hygiene.ml" 69 1860 1912
call(
  stack
)
type(
  SS.elt
)
"hygiene.ml" 69 1860 1913 "hygiene.ml" 69 1860 1914
type(
  SS.t ref -> SS.t
)
ident(
  ext_ref Pervasives.( ! )
)
"hygiene.ml" 69 1860 1914 "hygiene.ml" 69 1860 1922
type(
  SS.t ref
)
ident(
  int_ref microbes "hygiene.ml" 61 1658 1664 "hygiene.ml" 61 1658 1672
)
"hygiene.ml" 69 1860 1913 "hygiene.ml" 69 1860 1922
type(
  SS.t
)
"hygiene.ml" 69 1860 1878 "hygiene.ml" 69 1860 1922
call(
  stack
)
type(
  SS.t
)
"hygiene.ml" 69 1860 1866 "hygiene.ml" 69 1860 1922
type(
  unit
)
"hygiene.ml" 68 1831 1835 "hygiene.ml" 69 1860 1922
type(
  unit
)
"hygiene.ml" 71 1928 1934 "hygiene.ml" 71 1928 1944
type(
  bool Slurp.entry list -> rule -> string list
)
ident(
  def check_rule "hygiene.ml" 115 3558 3560 "hygiene.ml" 175 6096 6101
)
"hygiene.ml" 71 1928 1951 "hygiene.ml" 71 1928 1958
type(
  bool Slurp.entry list
)
ident(
  def entries "hygiene.ml" 71 1928 1962 "hygiene.ml" 113 3535 3552
)
"hygiene.ml" 72 1971 1981 "hygiene.ml" 72 1971 1987
type(
  pattern
)
ident(
  def suffix "hygiene.ml" 73 1991 1999 "hygiene.ml" 86 2509 2526
)
"hygiene.ml" 72 1971 1977 "hygiene.ml" 72 1971 1987
type(
  rule
)
"hygiene.ml" 73 1991 1999 "hygiene.ml" 73 1991 2011
type(
  (bool Slurp.entry -> string option) -> bool Slurp.entry list -> string list
)
ident(
  int_ref list_collect "hygiene.ml" 35 1144 1148 "hygiene.ml" 35 1144 1160
)
"hygiene.ml" 75 2037 2056 "hygiene.ml" 75 2037 2060
type(
  string
)
ident(
  def path "hygiene.ml" 76 2080 2096 "hygiene.ml" 83 2416 2438
)
"hygiene.ml" 75 2037 2062 "hygiene.ml" 75 2037 2066
type(
  string
)
ident(
  def name "hygiene.ml" 76 2080 2096 "hygiene.ml" 83 2416 2438
)
"hygiene.ml" 75 2037 2068 "hygiene.ml" 75 2037 2069
type(
  My_unix.stats Lazy.t
)
"hygiene.ml" 75 2037 2071 "hygiene.ml" 75 2037 2075
type(
  bool
)
"hygiene.ml" 75 2037 2051 "hygiene.ml" 75 2037 2076
type(
  bool Slurp.entry
)
"hygiene.ml" 76 2080 2099 "hygiene.ml" 76 2080 2120
type(
  string -> pattern -> bool
)
ident(
  ext_ref Filename.check_suffix
)
"hygiene.ml" 76 2080 2121 "hygiene.ml" 76 2080 2125
type(
  string
)
ident(
  int_ref name "hygiene.ml" 75 2037 2062 "hygiene.ml" 75 2037 2066
)
"hygiene.ml" 76 2080 2126 "hygiene.ml" 76 2080 2132
type(
  pattern
)
ident(
  int_ref suffix "hygiene.ml" 72 1971 1981 "hygiene.ml" 72 1971 1987
)
"hygiene.ml" 76 2080 2099 "hygiene.ml" 76 2080 2132
call(
  stack
)
type(
  bool
)
"hygiene.ml" 77 2133 2151 "hygiene.ml" 77 2133 2153
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"hygiene.ml" 77 2133 2154 "hygiene.ml" 77 2133 2157
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"hygiene.ml" 77 2133 2160 "hygiene.ml" 77 2133 2180
type(
  Pathname.t -> Pathname.t -> bool
)
ident(
  ext_ref Pathname.link_to_dir
)
"hygiene.ml" 77 2133 2182 "hygiene.ml" 77 2133 2197
type(
  string -> string -> Pathname.t
)
ident(
  ext_ref My_std.filename_concat
)
"hygiene.ml" 77 2133 2198 "hygiene.ml" 77 2133 2202
type(
  string
)
ident(
  int_ref path "hygiene.ml" 75 2037 2056 "hygiene.ml" 75 2037 2060
)
"hygiene.ml" 77 2133 2203 "hygiene.ml" 77 2133 2207
type(
  string
)
ident(
  int_ref name "hygiene.ml" 75 2037 2062 "hygiene.ml" 75 2037 2066
)
"hygiene.ml" 77 2133 2181 "hygiene.ml" 77 2133 2208
call(
  stack
)
type(
  Pathname.t
)
"hygiene.ml" 77 2133 2209 "hygiene.ml" 77 2133 2210
type(
  Pathname.t ref -> Pathname.t
)
ident(
  ext_ref Pervasives.( ! )
)
"hygiene.ml" 77 2133 2210 "hygiene.ml" 77 2133 2227
type(
  Pathname.t ref
)
ident(
  ext_ref Options.build_dir
)
"hygiene.ml" 77 2133 2209 "hygiene.ml" 77 2133 2227
type(
  Pathname.t
)
"hygiene.ml" 77 2133 2158 "hygiene.ml" 77 2133 2229
call(
  stack
)
type(
  bool
)
"hygiene.ml" 77 2133 2154 "hygiene.ml" 77 2133 2229
type(
  bool
)
"hygiene.ml" 76 2080 2099 "hygiene.ml" 77 2133 2229
type(
  bool
)
"hygiene.ml" 79 2259 2279 "hygiene.ml" 79 2259 2285
type(
  string -> string -> unit
)
ident(
  int_ref remove "hygiene.ml" 67 1806 1812 "hygiene.ml" 67 1806 1818
)
"hygiene.ml" 79 2259 2286 "hygiene.ml" 79 2259 2290
type(
  string
)
ident(
  int_ref path "hygiene.ml" 75 2037 2056 "hygiene.ml" 75 2037 2060
)
"hygiene.ml" 79 2259 2291 "hygiene.ml" 79 2259 2295
type(
  string
)
ident(
  int_ref name "hygiene.ml" 75 2037 2062 "hygiene.ml" 75 2037 2066
)
"hygiene.ml" 79 2259 2279 "hygiene.ml" 79 2259 2295
call(
  stack
)
type(
  unit
)
"hygiene.ml" 80 2297 2322 "hygiene.ml" 80 2297 2324
type(
  (string -> string -> pattern -> string, unit, string) format ->
  string -> string -> pattern -> string
)
ident(
  int_ref sf "hygiene.ml" 55 1540 1544 "hygiene.ml" 55 1540 1546
)
"hygiene.ml" 80 2297 2325 "hygiene.ml" 80 2297 2354
type(
  (string -> string -> pattern -> string, unit, string) format
)
"hygiene.ml" 80 2297 2355 "hygiene.ml" 80 2297 2359
type(
  string
)
ident(
  int_ref name "hygiene.ml" 75 2037 2062 "hygiene.ml" 75 2037 2066
)
"hygiene.ml" 80 2297 2360 "hygiene.ml" 80 2297 2364
type(
  string
)
ident(
  int_ref path "hygiene.ml" 75 2037 2056 "hygiene.ml" 75 2037 2060
)
"hygiene.ml" 80 2297 2365 "hygiene.ml" 80 2297 2371
type(
  pattern
)
ident(
  int_ref suffix "hygiene.ml" 72 1971 1981 "hygiene.ml" 72 1971 1987
)
"hygiene.ml" 80 2297 2321 "hygiene.ml" 80 2297 2372
call(
  stack
)
type(
  string
)
"hygiene.ml" 80 2297 2317 "hygiene.ml" 80 2297 2372
type(
  string option
)
"hygiene.ml" 78 2235 2253 "hygiene.ml" 81 2373 2394
type(
  string option
)
"hygiene.ml" 83 2416 2434 "hygiene.ml" 83 2416 2438
type(
  string option
)
"hygiene.ml" 76 2080 2096 "hygiene.ml" 83 2416 2438
type(
  string option
)
"hygiene.ml" 84 2439 2458 "hygiene.ml" 84 2439 2459
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"hygiene.ml" 84 2439 2453 "hygiene.ml" 84 2439 2459
type(
  bool Slurp.entry
)
"hygiene.ml" 84 2439 2466 "hygiene.ml" 84 2439 2467
type(
  bool Slurp.entry list Lazy.t
)
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"hygiene.ml" 84 2439 2462 "hygiene.ml" 84 2439 2467
type(
  bool Slurp.entry
)
"hygiene.ml" 84 2439 2453 "hygiene.ml" 84 2439 2467
type(
  bool Slurp.entry
)
"hygiene.ml" 84 2439 2475 "hygiene.ml" 84 2439 2476
type(
  exn
)
"hygiene.ml" 84 2439 2469 "hygiene.ml" 84 2439 2476
type(
  bool Slurp.entry
)
"hygiene.ml" 84 2439 2453 "hygiene.ml" 84 2439 2476
type(
  bool Slurp.entry
)
"hygiene.ml" 84 2439 2479 "hygiene.ml" 84 2439 2486
type(
  bool Slurp.entry
)
"hygiene.ml" 84 2439 2453 "hygiene.ml" 84 2439 2486
type(
  bool Slurp.entry
)
"hygiene.ml" 84 2439 2490 "hygiene.ml" 84 2439 2494
type(
  string option
)
"hygiene.ml" 74 2012 2022 "hygiene.ml" 85 2495 2508
type(
  bool Slurp.entry -> string option
)
"hygiene.ml" 86 2509 2519 "hygiene.ml" 86 2509 2526
type(
  bool Slurp.entry list
)
ident(
  int_ref entries "hygiene.ml" 71 1928 1951 "hygiene.ml" 71 1928 1958
)
"hygiene.ml" 73 1991 1999 "hygiene.ml" 86 2509 2526
call(
  tail
)
type(
  string list
)
"hygiene.ml" 87 2527 2545 "hygiene.ml" 87 2527 2552
type(
  pattern
)
ident(
  def suffix1 "hygiene.ml" 88 2566 2574 "hygiene.ml" 113 3535 3552
)
"hygiene.ml" 87 2527 2554 "hygiene.ml" 87 2527 2561
type(
  pattern
)
ident(
  def suffix2 "hygiene.ml" 88 2566 2574 "hygiene.ml" 113 3535 3552
)
"hygiene.ml" 87 2527 2533 "hygiene.ml" 87 2527 2562
type(
  rule
)
"hygiene.ml" 88 2566 2574 "hygiene.ml" 88 2566 2586
type(
  (bool Slurp.entry -> string option) -> bool Slurp.entry list -> string list
)
ident(
  int_ref list_collect "hygiene.ml" 35 1144 1148 "hygiene.ml" 35 1144 1160
)
"hygiene.ml" 90 2612 2631 "hygiene.ml" 90 2612 2635
type(
  string
)
ident(
  def path "hygiene.ml" 91 2655 2671 "hygiene.ml" 110 3441 3463
)
"hygiene.ml" 90 2612 2637 "hygiene.ml" 90 2612 2641
type(
  string
)
ident(
  def name "hygiene.ml" 91 2655 2671 "hygiene.ml" 110 3441 3463
)
"hygiene.ml" 90 2612 2643 "hygiene.ml" 90 2612 2644
type(
  My_unix.stats Lazy.t
)
"hygiene.ml" 90 2612 2646 "hygiene.ml" 90 2612 2650
type(
  bool
)
"hygiene.ml" 90 2612 2626 "hygiene.ml" 90 2612 2651
type(
  bool Slurp.entry
)
"hygiene.ml" 91 2655 2674 "hygiene.ml" 91 2655 2695
type(
  string -> pattern -> bool
)
ident(
  ext_ref Filename.check_suffix
)
"hygiene.ml" 91 2655 2696 "hygiene.ml" 91 2655 2700
type(
  string
)
ident(
  int_ref name "hygiene.ml" 90 2612 2637 "hygiene.ml" 90 2612 2641
)
"hygiene.ml" 91 2655 2701 "hygiene.ml" 91 2655 2708
type(
  pattern
)
ident(
  int_ref suffix1 "hygiene.ml" 87 2527 2545 "hygiene.ml" 87 2527 2552
)
"hygiene.ml" 91 2655 2674 "hygiene.ml" 91 2655 2708
call(
  stack
)
type(
  bool
)
"hygiene.ml" 93 2738 2762 "hygiene.ml" 93 2738 2766
type(
  string
)
ident(
  def base "hygiene.ml" 94 2806 2826 "hygiene.ml" 107 3371 3397
)
"hygiene.ml" 93 2738 2769 "hygiene.ml" 93 2738 2789
type(
  string -> pattern -> string
)
ident(
  ext_ref Filename.chop_suffix
)
"hygiene.ml" 93 2738 2790 "hygiene.ml" 93 2738 2794
type(
  string
)
ident(
  int_ref name "hygiene.ml" 90 2612 2637 "hygiene.ml" 90 2612 2641
)
"hygiene.ml" 93 2738 2795 "hygiene.ml" 93 2738 2802
type(
  pattern
)
ident(
  int_ref suffix1 "hygiene.ml" 87 2527 2545 "hygiene.ml" 87 2527 2552
)
"hygiene.ml" 93 2738 2769 "hygiene.ml" 93 2738 2802
call(
  stack
)
type(
  string
)
"hygiene.ml" 94 2806 2830 "hygiene.ml" 94 2806 2835
type(
  string
)
ident(
  def name' "hygiene.ml" 95 2856 2876 "hygiene.ml" 107 3371 3397
)
"hygiene.ml" 94 2806 2838 "hygiene.ml" 94 2806 2842
type(
  string
)
ident(
  int_ref base "hygiene.ml" 93 2738 2762 "hygiene.ml" 93 2738 2766
)
"hygiene.ml" 94 2806 2843 "hygiene.ml" 94 2806 2844
type(
  string -> pattern -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"hygiene.ml" 94 2806 2845 "hygiene.ml" 94 2806 2852
type(
  pattern
)
ident(
  int_ref suffix2 "hygiene.ml" 87 2527 2554 "hygiene.ml" 87 2527 2561
)
"hygiene.ml" 94 2806 2838 "hygiene.ml" 94 2806 2852
call(
  stack
)
type(
  string
)
"hygiene.ml" 95 2856 2879 "hygiene.ml" 95 2856 2890
type(
  (bool Slurp.entry -> bool) -> bool Slurp.entry list -> bool
)
ident(
  ext_ref My_std.List.exists
)
"hygiene.ml" 97 2929 2961 "hygiene.ml" 97 2929 2962
type(
  string
)
"hygiene.ml" 97 2929 2964 "hygiene.ml" 97 2929 2970
type(
  string
)
ident(
  def name'' "hygiene.ml" 97 2929 2984 "hygiene.ml" 97 2929 2998
)
"hygiene.ml" 97 2929 2972 "hygiene.ml" 97 2929 2973
type(
  My_unix.stats Lazy.t
)
"hygiene.ml" 97 2929 2975 "hygiene.ml" 97 2929 2979
type(
  bool
)
"hygiene.ml" 97 2929 2956 "hygiene.ml" 97 2929 2980
type(
  bool Slurp.entry
)
"hygiene.ml" 97 2929 2984 "hygiene.ml" 97 2929 2989
type(
  string
)
ident(
  int_ref name' "hygiene.ml" 94 2806 2830 "hygiene.ml" 94 2806 2835
)
"hygiene.ml" 97 2929 2990 "hygiene.ml" 97 2929 2991
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"hygiene.ml" 97 2929 2992 "hygiene.ml" 97 2929 2998
type(
  string
)
ident(
  int_ref name'' "hygiene.ml" 97 2929 2964 "hygiene.ml" 97 2929 2970
)
"hygiene.ml" 97 2929 2984 "hygiene.ml" 97 2929 2998
type(
  bool
)
"hygiene.ml" 98 2999 3031 "hygiene.ml" 98 2999 3032
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"hygiene.ml" 98 2999 3026 "hygiene.ml" 98 2999 3032
type(
  bool Slurp.entry
)
"hygiene.ml" 98 2999 3039 "hygiene.ml" 98 2999 3040
type(
  bool Slurp.entry list Lazy.t
)
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"hygiene.ml" 98 2999 3035 "hygiene.ml" 98 2999 3040
type(
  bool Slurp.entry
)
"hygiene.ml" 98 2999 3026 "hygiene.ml" 98 2999 3040
type(
  bool Slurp.entry
)
"hygiene.ml" 98 2999 3049 "hygiene.ml" 98 2999 3050
type(
  exn
)
"hygiene.ml" 98 2999 3043 "hygiene.ml" 98 2999 3050
type(
  bool Slurp.entry
)
"hygiene.ml" 98 2999 3026 "hygiene.ml" 98 2999 3050
type(
  bool Slurp.entry
)
"hygiene.ml" 98 2999 3053 "hygiene.ml" 98 2999 3060
type(
  bool Slurp.entry
)
"hygiene.ml" 98 2999 3026 "hygiene.ml" 98 2999 3060
type(
  bool Slurp.entry
)
"hygiene.ml" 98 2999 3064 "hygiene.ml" 98 2999 3069
type(
  bool
)
"hygiene.ml" 96 2891 2914 "hygiene.ml" 99 3070 3096
type(
  bool Slurp.entry -> bool
)
"hygiene.ml" 100 3097 3120 "hygiene.ml" 100 3097 3127
type(
  bool Slurp.entry list
)
ident(
  int_ref entries "hygiene.ml" 71 1928 1951 "hygiene.ml" 71 1928 1958
)
"hygiene.ml" 95 2856 2879 "hygiene.ml" 100 3097 3127
call(
  stack
)
type(
  bool
)
"hygiene.ml" 103 3181 3205 "hygiene.ml" 103 3181 3211
type(
  string -> string -> unit
)
ident(
  int_ref remove "hygiene.ml" 67 1806 1812 "hygiene.ml" 67 1806 1818
)
"hygiene.ml" 103 3181 3212 "hygiene.ml" 103 3181 3216
type(
  string
)
ident(
  int_ref path "hygiene.ml" 90 2612 2631 "hygiene.ml" 90 2612 2635
)
"hygiene.ml" 103 3181 3217 "hygiene.ml" 103 3181 3222
type(
  string
)
ident(
  int_ref name' "hygiene.ml" 94 2806 2830 "hygiene.ml" 94 2806 2835
)
"hygiene.ml" 103 3181 3205 "hygiene.ml" 103 3181 3222
call(
  stack
)
type(
  unit
)
"hygiene.ml" 104 3224 3253 "hygiene.ml" 104 3224 3255
type(
  (string -> string -> string -> string, unit, string) format ->
  string -> string -> string -> string
)
ident(
  int_ref sf "hygiene.ml" 55 1540 1544 "hygiene.ml" 55 1540 1546
)
"hygiene.ml" 104 3224 3256 "hygiene.ml" 104 3224 3302
type(
  (string -> string -> string -> string, unit, string) format
)
"hygiene.ml" 104 3224 3303 "hygiene.ml" 104 3224 3307
type(
  string
)
ident(
  int_ref name "hygiene.ml" 90 2612 2637 "hygiene.ml" 90 2612 2641
)
"hygiene.ml" 104 3224 3308 "hygiene.ml" 104 3224 3313
type(
  string
)
ident(
  int_ref name' "hygiene.ml" 94 2806 2830 "hygiene.ml" 94 2806 2835
)
"hygiene.ml" 104 3224 3314 "hygiene.ml" 104 3224 3318
type(
  string
)
ident(
  int_ref path "hygiene.ml" 90 2612 2631 "hygiene.ml" 90 2612 2635
)
"hygiene.ml" 104 3224 3252 "hygiene.ml" 104 3224 3319
call(
  stack
)
type(
  string
)
"hygiene.ml" 104 3224 3248 "hygiene.ml" 104 3224 3319
type(
  string option
)
"hygiene.ml" 102 3153 3175 "hygiene.ml" 105 3320 3345
type(
  string option
)
"hygiene.ml" 107 3371 3393 "hygiene.ml" 107 3371 3397
type(
  string option
)
"hygiene.ml" 95 2856 2876 "hygiene.ml" 107 3371 3397
type(
  string option
)
"hygiene.ml" 94 2806 2826 "hygiene.ml" 107 3371 3397
type(
  string option
)
"hygiene.ml" 92 2714 2732 "hygiene.ml" 108 3398 3419
type(
  string option
)
"hygiene.ml" 110 3441 3459 "hygiene.ml" 110 3441 3463
type(
  string option
)
"hygiene.ml" 91 2655 2671 "hygiene.ml" 110 3441 3463
type(
  string option
)
"hygiene.ml" 111 3464 3483 "hygiene.ml" 111 3464 3484
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"hygiene.ml" 111 3464 3478 "hygiene.ml" 111 3464 3484
type(
  bool Slurp.entry
)
"hygiene.ml" 111 3464 3491 "hygiene.ml" 111 3464 3492
type(
  bool Slurp.entry list Lazy.t
)
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"hygiene.ml" 111 3464 3487 "hygiene.ml" 111 3464 3492
type(
  bool Slurp.entry
)
"hygiene.ml" 111 3464 3478 "hygiene.ml" 111 3464 3492
type(
  bool Slurp.entry
)
"hygiene.ml" 111 3464 3501 "hygiene.ml" 111 3464 3502
type(
  exn
)
"hygiene.ml" 111 3464 3495 "hygiene.ml" 111 3464 3502
type(
  bool Slurp.entry
)
"hygiene.ml" 111 3464 3478 "hygiene.ml" 111 3464 3502
type(
  bool Slurp.entry
)
"hygiene.ml" 111 3464 3505 "hygiene.ml" 111 3464 3512
type(
  bool Slurp.entry
)
"hygiene.ml" 111 3464 3478 "hygiene.ml" 111 3464 3512
type(
  bool Slurp.entry
)
"hygiene.ml" 111 3464 3516 "hygiene.ml" 111 3464 3520
type(
  string option
)
"hygiene.ml" 89 2587 2597 "hygiene.ml" 112 3521 3534
type(
  bool Slurp.entry -> string option
)
"hygiene.ml" 113 3535 3545 "hygiene.ml" 113 3535 3552
type(
  bool Slurp.entry list
)
ident(
  int_ref entries "hygiene.ml" 71 1928 1951 "hygiene.ml" 71 1928 1958
)
"hygiene.ml" 88 2566 2574 "hygiene.ml" 113 3535 3552
call(
  tail
)
type(
  string list
)
"hygiene.ml" 71 1928 1962 "hygiene.ml" 113 3535 3552
type(
  rule -> string list
)
"hygiene.ml" 71 1928 1947 "hygiene.ml" 113 3535 3552
type(
  bool Slurp.entry list -> rule -> string list
)
"hygiene.ml" 115 3558 3568 "hygiene.ml" 115 3558 3579
type(
  bool Slurp.entry -> unit
)
ident(
  def check_entry "hygiene.ml" 115 3558 3560 "hygiene.ml" 175 6096 6101
)
"hygiene.ml" 116 3591 3601 "hygiene.ml" 116 3591 3602
type(
  string
)
"hygiene.ml" 116 3591 3603 "hygiene.ml" 116 3591 3604
type(
  string
)
"hygiene.ml" 116 3591 3605 "hygiene.ml" 116 3591 3606
type(
  My_unix.stats Lazy.t
)
"hygiene.ml" 116 3591 3607 "hygiene.ml" 116 3591 3611
type(
  bool
)
"hygiene.ml" 116 3591 3612 "hygiene.ml" 116 3591 3619
type(
  bool Slurp.entry list Lazy.t
)
ident(
  def entries "hygiene.ml" 117 3624 3632 "hygiene.ml" 125 3896 3935
)
"hygiene.ml" 116 3591 3597 "hygiene.ml" 116 3591 3620
type(
  bool Slurp.entry
)
"hygiene.ml" 117 3624 3632 "hygiene.ml" 117 3624 3641
type(
  (law -> unit) -> law list -> unit
)
ident(
  ext_ref My_std.List.iter
)
"hygiene.ml" 118 3642 3662 "hygiene.ml" 118 3642 3665
type(
  law
)
ident(
  def law "hygiene.ml" 119 3669 3681 "hygiene.ml" 122 3805 3865
)
"hygiene.ml" 119 3669 3687 "hygiene.ml" 119 3669 3698
type(
  string list list -> string list
)
ident(
  ext_ref My_std.List.concat
)
"hygiene.ml" 119 3669 3700 "hygiene.ml" 119 3669 3708
type(
  (rule -> string list) -> rule list -> string list list
)
ident(
  ext_ref My_std.List.map
)
"hygiene.ml" 119 3669 3710 "hygiene.ml" 119 3669 3720
type(
  bool Slurp.entry list -> rule -> string list
)
ident(
  int_ref check_rule "hygiene.ml" 71 1928 1934 "hygiene.ml" 71 1928 1944
)
"hygiene.ml" 119 3669 3721 "hygiene.ml" 119 3669 3723
type(
  bool Slurp.entry list Lazy.t -> bool Slurp.entry list
)
ident(
  ext_ref My_std.( !* )
)
"hygiene.ml" 119 3669 3723 "hygiene.ml" 119 3669 3730
type(
  bool Slurp.entry list Lazy.t
)
ident(
  int_ref entries "hygiene.ml" 116 3591 3612 "hygiene.ml" 116 3591 3619
)
"hygiene.ml" 119 3669 3721 "hygiene.ml" 119 3669 3730
call(
  stack
)
type(
  bool Slurp.entry list
)
"hygiene.ml" 119 3669 3709 "hygiene.ml" 119 3669 3731
call(
  stack
)
type(
  rule -> string list
)
"hygiene.ml" 119 3669 3732 "hygiene.ml" 119 3669 3735
type(
  law
)
ident(
  int_ref law "hygiene.ml" 118 3642 3662 "hygiene.ml" 118 3642 3665
)
"hygiene.ml" 119 3669 3732 "hygiene.ml" 119 3669 3745
type(
  rule list
)
"hygiene.ml" 119 3669 3699 "hygiene.ml" 119 3669 3746
call(
  stack
)
type(
  string list list
)
"hygiene.ml" 119 3669 3687 "hygiene.ml" 119 3669 3746
call(
  stack
)
type(
  string list
)
"hygiene.ml" 120 3752 3766 "hygiene.ml" 120 3752 3768
type(
  string list
)
"hygiene.ml" 120 3752 3772 "hygiene.ml" 120 3752 3774
type(
  unit
)
"hygiene.ml" 121 3775 3789 "hygiene.ml" 121 3775 3801
type(
  string list
)
ident(
  def explanations "hygiene.ml" 122 3805 3819 "hygiene.ml" 122 3805 3865
)
"hygiene.ml" 122 3805 3819 "hygiene.ml" 122 3805 3828
type(
  (law * string list) list ref
)
ident(
  int_ref penalties "hygiene.ml" 60 1630 1636 "hygiene.ml" 60 1630 1645
)
"hygiene.ml" 122 3805 3829 "hygiene.ml" 122 3805 3831
type(
  (law * string list) list ref -> (law * string list) list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"hygiene.ml" 122 3805 3833 "hygiene.ml" 122 3805 3836
type(
  law
)
ident(
  int_ref law "hygiene.ml" 118 3642 3662 "hygiene.ml" 118 3642 3665
)
"hygiene.ml" 122 3805 3838 "hygiene.ml" 122 3805 3850
type(
  string list
)
ident(
  int_ref explanations "hygiene.ml" 121 3775 3789 "hygiene.ml" 121 3775 3801
)
"hygiene.ml" 122 3805 3832 "hygiene.ml" 122 3805 3851
type(
  law * string list
)
"hygiene.ml" 122 3805 3855 "hygiene.ml" 122 3805 3856
type(
  (law * string list) list ref -> (law * string list) list
)
ident(
  ext_ref Pervasives.( ! )
)
"hygiene.ml" 122 3805 3856 "hygiene.ml" 122 3805 3865
type(
  (law * string list) list ref
)
ident(
  int_ref penalties "hygiene.ml" 60 1630 1636 "hygiene.ml" 60 1630 1645
)
"hygiene.ml" 122 3805 3855 "hygiene.ml" 122 3805 3865
type(
  (law * string list) list
)
"hygiene.ml" 122 3805 3832 "hygiene.ml" 122 3805 3865
type(
  (law * string list) list
)
"hygiene.ml" 122 3805 3819 "hygiene.ml" 122 3805 3865
type(
  unit
)
"hygiene.ml" 119 3669 3681 "hygiene.ml" 122 3805 3865
type(
  unit
)
"hygiene.ml" 118 3642 3652 "hygiene.ml" 123 3866 3879
type(
  law -> unit
)
"hygiene.ml" 124 3880 3890 "hygiene.ml" 124 3880 3894
type(
  law list
)
ident(
  int_ref laws "hygiene.ml" 59 1597 1617 "hygiene.ml" 59 1597 1621
)
"hygiene.ml" 117 3624 3632 "hygiene.ml" 124 3880 3894
call(
  stack
)
type(
  unit
)
"hygiene.ml" 125 3896 3904 "hygiene.ml" 125 3896 3913
type(
  (bool Slurp.entry -> unit) -> bool Slurp.entry list -> unit
)
ident(
  ext_ref My_std.List.iter
)
"hygiene.ml" 125 3896 3914 "hygiene.ml" 125 3896 3925
type(
  bool Slurp.entry -> unit
)
ident(
  int_ref check_entry "hygiene.ml" 115 3558 3568 "hygiene.ml" 115 3558 3579
)
"hygiene.ml" 125 3896 3926 "hygiene.ml" 125 3896 3928
type(
  bool Slurp.entry list Lazy.t -> bool Slurp.entry list
)
ident(
  ext_ref My_std.( !* )
)
"hygiene.ml" 125 3896 3928 "hygiene.ml" 125 3896 3935
type(
  bool Slurp.entry list Lazy.t
)
ident(
  int_ref entries "hygiene.ml" 116 3591 3612 "hygiene.ml" 116 3591 3619
)
"hygiene.ml" 125 3896 3926 "hygiene.ml" 125 3896 3935
call(
  stack
)
type(
  bool Slurp.entry list
)
"hygiene.ml" 125 3896 3904 "hygiene.ml" 125 3896 3935
call(
  tail
)
type(
  unit
)
"hygiene.ml" 117 3624 3632 "hygiene.ml" 125 3896 3935
type(
  unit
)
"hygiene.ml" 126 3936 3946 "hygiene.ml" 126 3936 3947
type(
  bool Slurp.entry list Lazy.t
)
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"hygiene.ml" 126 3936 3942 "hygiene.ml" 126 3936 3947
type(
  bool Slurp.entry
)
"hygiene.ml" 126 3936 3955 "hygiene.ml" 126 3936 3956
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"hygiene.ml" 126 3936 3950 "hygiene.ml" 126 3936 3956
type(
  bool Slurp.entry
)
"hygiene.ml" 126 3936 3942 "hygiene.ml" 126 3936 3956
type(
  bool Slurp.entry
)
"hygiene.ml" 126 3936 3965 "hygiene.ml" 126 3936 3966
type(
  exn
)
"hygiene.ml" 126 3936 3959 "hygiene.ml" 126 3936 3966
type(
  bool Slurp.entry
)
"hygiene.ml" 126 3936 3942 "hygiene.ml" 126 3936 3966
type(
  bool Slurp.entry
)
"hygiene.ml" 126 3936 3969 "hygiene.ml" 126 3936 3976
type(
  bool Slurp.entry
)
"hygiene.ml" 126 3936 3942 "hygiene.ml" 126 3936 3976
type(
  bool Slurp.entry
)
"hygiene.ml" 126 3936 3980 "hygiene.ml" 126 3936 3982
type(
  unit
)
"hygiene.ml" 115 3558 3582 "hygiene.ml" 126 3936 3982
type(
  bool Slurp.entry -> unit
)
"hygiene.ml" 128 3988 3990 "hygiene.ml" 128 3988 4001
type(
  bool Slurp.entry -> unit
)
ident(
  int_ref check_entry "hygiene.ml" 115 3558 3568 "hygiene.ml" 115 3558 3579
)
"hygiene.ml" 128 3988 4002 "hygiene.ml" 128 3988 4007
type(
  bool Slurp.entry
)
ident(
  int_ref entry "hygiene.ml" 59 1597 1622 "hygiene.ml" 59 1597 1627
)
"hygiene.ml" 128 3988 3990 "hygiene.ml" 128 3988 4007
call(
  stack
)
type(
  unit
)
"hygiene.ml" 130 4017 4025 "hygiene.ml" 130 4017 4033
type(
  SS.t
)
ident(
  def microbes "hygiene.ml" 131 4049 4053 "hygiene.ml" 174 6081 6095
)
"hygiene.ml" 130 4017 4036 "hygiene.ml" 130 4017 4037
type(
  SS.t ref -> SS.t
)
ident(
  ext_ref Pervasives.( ! )
)
"hygiene.ml" 130 4017 4037 "hygiene.ml" 130 4017 4045
type(
  SS.t ref
)
ident(
  int_ref microbes "hygiene.ml" 61 1658 1664 "hygiene.ml" 61 1658 1672
)
"hygiene.ml" 130 4017 4036 "hygiene.ml" 130 4017 4045
type(
  SS.t
)
"hygiene.ml" 131 4049 4056 "hygiene.ml" 131 4049 4059
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"hygiene.ml" 131 4049 4061 "hygiene.ml" 131 4049 4072
type(
  SS.t -> bool
)
ident(
  ext_ref SS.is_empty
)
"hygiene.ml" 131 4049 4073 "hygiene.ml" 131 4049 4081
type(
  SS.t
)
ident(
  int_ref microbes "hygiene.ml" 130 4017 4025 "hygiene.ml" 130 4017 4033
)
"hygiene.ml" 131 4049 4060 "hygiene.ml" 131 4049 4082
call(
  stack
)
type(
  bool
)
"hygiene.ml" 131 4049 4056 "hygiene.ml" 131 4049 4082
type(
  bool
)
"hygiene.ml" 133 4100 4114 "hygiene.ml" 133 4100 4122
type(
  string option
)
ident(
  int_ref sanitize "hygiene.ml" 59 1597 1608 "hygiene.ml" 59 1597 1616
)
"hygiene.ml" 134 4128 4138 "hygiene.ml" 134 4128 4142
type(
  string option
)
"hygiene.ml" 135 4146 4158 "hygiene.ml" 135 4146 4169
type(
  (unit, Format.formatter, unit) format -> unit
)
ident(
  ext_ref Log.eprintf
)
"hygiene.ml" 135 4146 4170 "hygiene.ml" 136 4244 4284
type(
  (unit, Format.formatter, unit) format
)
"hygiene.ml" 135 4146 4158 "hygiene.ml" 136 4244 4284
call(
  stack
)
type(
  unit
)
"hygiene.ml" 137 4286 4298 "hygiene.ml" 137 4286 4305
type(
  (SS.elt -> unit) -> SS.t -> unit
)
ident(
  ext_ref SS.iter
)
"hygiene.ml" 138 4306 4330 "hygiene.ml" 138 4306 4332
type(
  SS.elt
)
ident(
  def fn "hygiene.ml" 139 4336 4352 "hygiene.ml" 139 4336 4372
)
"hygiene.ml" 139 4336 4352 "hygiene.ml" 139 4336 4363
type(
  (SS.elt -> unit, Format.formatter, unit) format -> SS.elt -> unit
)
ident(
  ext_ref Log.eprintf
)
"hygiene.ml" 139 4336 4364 "hygiene.ml" 139 4336 4369
type(
  (SS.elt -> unit, Format.formatter, unit) format
)
"hygiene.ml" 139 4336 4370 "hygiene.ml" 139 4336 4372
type(
  SS.elt
)
ident(
  int_ref fn "hygiene.ml" 138 4306 4330 "hygiene.ml" 138 4306 4332
)
"hygiene.ml" 139 4336 4352 "hygiene.ml" 139 4336 4372
call(
  tail
)
type(
  unit
)
"hygiene.ml" 138 4306 4320 "hygiene.ml" 140 4373 4390
type(
  SS.elt -> unit
)
"hygiene.ml" 141 4391 4405 "hygiene.ml" 141 4391 4413
type(
  SS.t
)
ident(
  int_ref microbes "hygiene.ml" 130 4017 4025 "hygiene.ml" 130 4017 4033
)
"hygiene.ml" 137 4286 4298 "hygiene.ml" 141 4391 4413
call(
  stack
)
type(
  unit
)
"hygiene.ml" 142 4415 4427 "hygiene.ml" 142 4415 4438
type(
  (unit, Format.formatter, unit) format -> unit
)
ident(
  ext_ref Log.eprintf
)
"hygiene.ml" 142 4415 4439 "hygiene.ml" 143 4520 4610
type(
  (unit, Format.formatter, unit) format
)
"hygiene.ml" 142 4415 4427 "hygiene.ml" 143 4520 4610
call(
  stack
)
type(
  unit
)
"hygiene.ml" 144 4612 4624 "hygiene.ml" 144 4612 4629
type(
  exn -> unit
)
ident(
  ext_ref Pervasives.raise
)
"hygiene.ml" 144 4612 4630 "hygiene.ml" 144 4612 4653
type(
  exn
)
"hygiene.ml" 144 4612 4624 "hygiene.ml" 144 4612 4653
type(
  unit
)
"hygiene.ml" 142 4415 4427 "hygiene.ml" 144 4612 4653
type(
  unit
)
"hygiene.ml" 137 4286 4298 "hygiene.ml" 144 4612 4653
type(
  unit
)
"hygiene.ml" 135 4146 4158 "hygiene.ml" 144 4612 4653
type(
  unit
)
"hygiene.ml" 145 4654 4669 "hygiene.ml" 145 4654 4671
type(
  string
)
ident(
  def fn "hygiene.ml" 146 4675 4687 "hygiene.ml" 172 6045 6069
)
"hygiene.ml" 145 4654 4664 "hygiene.ml" 145 4654 4671
type(
  string option
)
"hygiene.ml" 146 4675 4691 "hygiene.ml" 146 4675 4692
type(
  int
)
ident(
  def m "hygiene.ml" 147 4719 4731 "hygiene.ml" 172 6045 6069
)
"hygiene.ml" 146 4675 4695 "hygiene.ml" 146 4675 4706
type(
  SS.t -> int
)
ident(
  ext_ref SS.cardinal
)
"hygiene.ml" 146 4675 4707 "hygiene.ml" 146 4675 4715
type(
  SS.t
)
ident(
  int_ref microbes "hygiene.ml" 130 4017 4025 "hygiene.ml" 130 4017 4033
)
"hygiene.ml" 146 4675 4695 "hygiene.ml" 146 4675 4715
call(
  stack
)
type(
  int
)
"hygiene.ml" 147 4719 4731 "hygiene.ml" 147 4719 4742
type(
  (int -> string -> string -> unit, Format.formatter, unit) format ->
  int -> string -> string -> unit
)
ident(
  ext_ref Log.eprintf
)
"hygiene.ml" 148 4743 4757 "hygiene.ml" 153 5128 5185
type(
  (int -> string -> string -> unit, Format.formatter, unit) format
)
"hygiene.ml" 154 5186 5201 "hygiene.ml" 154 5186 5202
type(
  int
)
ident(
  int_ref m "hygiene.ml" 146 4675 4691 "hygiene.ml" 146 4675 4692
)
"hygiene.ml" 154 5186 5207 "hygiene.ml" 154 5186 5208
type(
  int
)
ident(
  int_ref m "hygiene.ml" 146 4675 4691 "hygiene.ml" 146 4675 4692
)
"hygiene.ml" 154 5186 5209 "hygiene.ml" 154 5186 5210
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"hygiene.ml" 154 5186 5211 "hygiene.ml" 154 5186 5212
type(
  int
)
"hygiene.ml" 154 5186 5207 "hygiene.ml" 154 5186 5212
type(
  bool
)
"hygiene.ml" 154 5186 5218 "hygiene.ml" 154 5186 5220
type(
  string
)
"hygiene.ml" 154 5186 5226 "hygiene.ml" 154 5186 5229
type(
  string
)
"hygiene.ml" 154 5186 5203 "hygiene.ml" 154 5186 5230
type(
  string
)
"hygiene.ml" 154 5186 5231 "hygiene.ml" 154 5186 5233
type(
  string
)
ident(
  int_ref fn "hygiene.ml" 145 4654 4669 "hygiene.ml" 145 4654 4671
)
"hygiene.ml" 147 4719 4731 "hygiene.ml" 154 5186 5233
call(
  stack
)
type(
  unit
)
"hygiene.ml" 155 5235 5251 "hygiene.ml" 155 5235 5253
type(
  out_channel
)
ident(
  def oc "hygiene.ml" 158 5479 5491 "hygiene.ml" 172 6045 6069
)
"hygiene.ml" 155 5235 5256 "hygiene.ml" 155 5235 5268
type(
  open_flag list -> int -> string -> out_channel
)
ident(
  ext_ref Pervasives.open_out_gen
)
"hygiene.ml" 155 5235 5270 "hygiene.ml" 155 5235 5281
type(
  open_flag
)
"hygiene.ml" 155 5235 5283 "hygiene.ml" 155 5235 5293
type(
  open_flag
)
"hygiene.ml" 155 5235 5295 "hygiene.ml" 155 5235 5305
type(
  open_flag
)
"hygiene.ml" 155 5235 5307 "hygiene.ml" 155 5235 5318
type(
  open_flag
)
"hygiene.ml" 155 5235 5269 "hygiene.ml" 155 5235 5319
type(
  open_flag list
)
"hygiene.ml" 155 5235 5320 "hygiene.ml" 155 5235 5325
type(
  int
)
"hygiene.ml" 155 5235 5326 "hygiene.ml" 155 5235 5328
type(
  string
)
ident(
  int_ref fn "hygiene.ml" 145 4654 4669 "hygiene.ml" 145 4654 4671
)
"hygiene.ml" 155 5235 5256 "hygiene.ml" 155 5235 5328
call(
  stack
)
type(
  out_channel
)
"hygiene.ml" 158 5479 5495 "hygiene.ml" 158 5479 5497
type(
  out_channel -> ('a, out_channel, unit) format -> 'a
)
ident(
  def fp "hygiene.ml" 159 5518 5530 "hygiene.ml" 172 6045 6069
)
"hygiene.ml" 158 5479 5500 "hygiene.ml" 158 5479 5514
type(
  out_channel -> ('a, out_channel, unit) format -> 'a
)
ident(
  ext_ref Printf.fprintf
)
"hygiene.ml" 159 5518 5530 "hygiene.ml" 159 5518 5532
type(
  out_channel -> (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  int_ref fp "hygiene.ml" 158 5479 5495 "hygiene.ml" 158 5479 5497
)
"hygiene.ml" 159 5518 5533 "hygiene.ml" 159 5518 5535
type(
  out_channel
)
ident(
  int_ref oc "hygiene.ml" 155 5235 5251 "hygiene.ml" 155 5235 5253
)
"hygiene.ml" 159 5518 5536 "hygiene.ml" 163 5654 5676
type(
  (string -> unit, out_channel, unit) format
)
"hygiene.ml" 163 5654 5678 "hygiene.ml" 163 5654 5708
type(
  Pathname.t -> string
)
ident(
  ext_ref Shell.quote_filename_if_needed
)
"hygiene.ml" 163 5654 5709 "hygiene.ml" 163 5654 5721
type(
  Pathname.t
)
ident(
  ext_ref Pathname.pwd
)
"hygiene.ml" 163 5654 5677 "hygiene.ml" 163 5654 5722
call(
  stack
)
type(
  string
)
"hygiene.ml" 159 5518 5530 "hygiene.ml" 163 5654 5722
call(
  stack
)
type(
  unit
)
"hygiene.ml" 164 5724 5736 "hygiene.ml" 164 5724 5743
type(
  (SS.elt -> unit) -> SS.t -> unit
)
ident(
  ext_ref SS.iter
)
"hygiene.ml" 165 5744 5768 "hygiene.ml" 165 5744 5770
type(
  SS.elt
)
ident(
  def fn "hygiene.ml" 166 5774 5790 "hygiene.ml" 166 5774 5844
)
"hygiene.ml" 166 5774 5790 "hygiene.ml" 166 5774 5792
type(
  out_channel -> (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  int_ref fp "hygiene.ml" 158 5479 5495 "hygiene.ml" 158 5479 5497
)
"hygiene.ml" 166 5774 5793 "hygiene.ml" 166 5774 5795
type(
  out_channel
)
ident(
  int_ref oc "hygiene.ml" 155 5235 5251 "hygiene.ml" 155 5235 5253
)
"hygiene.ml" 166 5774 5796 "hygiene.ml" 166 5774 5808
type(
  (string -> unit, out_channel, unit) format
)
"hygiene.ml" 166 5774 5810 "hygiene.ml" 166 5774 5840
type(
  SS.elt -> string
)
ident(
  ext_ref Shell.quote_filename_if_needed
)
"hygiene.ml" 166 5774 5841 "hygiene.ml" 166 5774 5843
type(
  SS.elt
)
ident(
  int_ref fn "hygiene.ml" 165 5744 5768 "hygiene.ml" 165 5744 5770
)
"hygiene.ml" 166 5774 5809 "hygiene.ml" 166 5774 5844
call(
  stack
)
type(
  string
)
"hygiene.ml" 166 5774 5790 "hygiene.ml" 166 5774 5844
call(
  tail
)
type(
  unit
)
"hygiene.ml" 165 5744 5758 "hygiene.ml" 167 5845 5862
type(
  SS.elt -> unit
)
"hygiene.ml" 168 5863 5877 "hygiene.ml" 168 5863 5885
type(
  SS.t
)
ident(
  int_ref microbes "hygiene.ml" 130 4017 4025 "hygiene.ml" 130 4017 4033
)
"hygiene.ml" 164 5724 5736 "hygiene.ml" 168 5863 5885
call(
  stack
)
type(
  unit
)
"hygiene.ml" 170 5923 5935 "hygiene.ml" 170 5923 5937
type(
  out_channel -> (unit, out_channel, unit) format -> unit
)
ident(
  int_ref fp "hygiene.ml" 158 5479 5495 "hygiene.ml" 158 5479 5497
)
"hygiene.ml" 170 5923 5938 "hygiene.ml" 170 5923 5940
type(
  out_channel
)
ident(
  int_ref oc "hygiene.ml" 155 5235 5251 "hygiene.ml" 155 5235 5253
)
"hygiene.ml" 170 5923 5941 "hygiene.ml" 170 5923 5975
type(
  (unit, out_channel, unit) format
)
"hygiene.ml" 170 5923 5935 "hygiene.ml" 170 5923 5975
call(
  stack
)
type(
  unit
)
"hygiene.ml" 171 5977 5989 "hygiene.ml" 171 5977 5991
type(
  out_channel -> (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  int_ref fp "hygiene.ml" 158 5479 5495 "hygiene.ml" 158 5479 5497
)
"hygiene.ml" 171 5977 5992 "hygiene.ml" 171 5977 5994
type(
  out_channel
)
ident(
  int_ref oc "hygiene.ml" 155 5235 5251 "hygiene.ml" 155 5235 5253
)
"hygiene.ml" 171 5977 5995 "hygiene.ml" 171 5977 6007
type(
  (string -> unit, out_channel, unit) format
)
"hygiene.ml" 171 5977 6009 "hygiene.ml" 171 5977 6039
type(
  string -> string
)
ident(
  ext_ref Shell.quote_filename_if_needed
)
"hygiene.ml" 171 5977 6040 "hygiene.ml" 171 5977 6042
type(
  string
)
ident(
  int_ref fn "hygiene.ml" 145 4654 4669 "hygiene.ml" 145 4654 4671
)
"hygiene.ml" 171 5977 6008 "hygiene.ml" 171 5977 6043
call(
  stack
)
type(
  string
)
"hygiene.ml" 171 5977 5989 "hygiene.ml" 171 5977 6043
call(
  stack
)
type(
  unit
)
"hygiene.ml" 172 6045 6057 "hygiene.ml" 172 6045 6066
type(
  out_channel -> unit
)
ident(
  ext_ref Pervasives.close_out
)
"hygiene.ml" 172 6045 6067 "hygiene.ml" 172 6045 6069
type(
  out_channel
)
ident(
  int_ref oc "hygiene.ml" 155 5235 5251 "hygiene.ml" 155 5235 5253
)
"hygiene.ml" 172 6045 6057 "hygiene.ml" 172 6045 6069
call(
  stack
)
type(
  unit
)
"hygiene.ml" 171 5977 5989 "hygiene.ml" 172 6045 6069
type(
  unit
)
"hygiene.ml" 170 5923 5935 "hygiene.ml" 172 6045 6069
type(
  unit
)
"hygiene.ml" 164 5724 5736 "hygiene.ml" 172 6045 6069
type(
  unit
)
"hygiene.ml" 159 5518 5530 "hygiene.ml" 172 6045 6069
type(
  unit
)
"hygiene.ml" 158 5479 5491 "hygiene.ml" 172 6045 6069
type(
  unit
)
"hygiene.ml" 155 5235 5247 "hygiene.ml" 172 6045 6069
type(
  unit
)
"hygiene.ml" 147 4719 4731 "hygiene.ml" 172 6045 6069
type(
  unit
)
"hygiene.ml" 146 4675 4687 "hygiene.ml" 172 6045 6069
type(
  unit
)
"hygiene.ml" 132 4088 4094 "hygiene.ml" 173 6070 6079
type(
  unit
)
"hygiene.ml" 131 4049 4053 "hygiene.ml" 173 6070 6079
type(
  unit
)
"hygiene.ml" 174 6081 6085 "hygiene.ml" 174 6081 6086
type(
  (law * string list) list ref -> (law * string list) list
)
ident(
  ext_ref Pervasives.( ! )
)
"hygiene.ml" 174 6081 6086 "hygiene.ml" 174 6081 6095
type(
  (law * string list) list ref
)
ident(
  int_ref penalties "hygiene.ml" 60 1630 1636 "hygiene.ml" 60 1630 1645
)
"hygiene.ml" 174 6081 6085 "hygiene.ml" 174 6081 6095
type(
  (law * string list) list
)
"hygiene.ml" 131 4049 4053 "hygiene.ml" 174 6081 6095
type(
  (law * string list) list
)
"hygiene.ml" 129 4009 4011 "hygiene.ml" 175 6096 6101
type(
  (law * string list) list
)
"hygiene.ml" 128 3988 3990 "hygiene.ml" 175 6096 6101
type(
  (law * string list) list
)
"hygiene.ml" 115 3558 3560 "hygiene.ml" 175 6096 6101
type(
  (law * string list) list
)
"hygiene.ml" 71 1928 1930 "hygiene.ml" 175 6096 6101
type(
  (law * string list) list
)
"hygiene.ml" 67 1806 1808 "hygiene.ml" 175 6096 6101
type(
  (law * string list) list
)
"hygiene.ml" 62 1691 1693 "hygiene.ml" 175 6096 6101
type(
  (law * string list) list
)
"hygiene.ml" 61 1658 1660 "hygiene.ml" 175 6096 6101
type(
  (law * string list) list
)
"hygiene.ml" 60 1630 1632 "hygiene.ml" 175 6096 6101
type(
  (law * string list) list
)
